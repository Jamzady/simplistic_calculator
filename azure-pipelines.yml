# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - main
    - dev
    - releases/*

pr:
  branches:
    include:
      - main
      - dev
      - releases/*

variables:
  - name: GRADLE_USER_HOME
    value: '$(Pipeline.Workspace)/.gradle'
  - name: isMainBranches
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.SourceBranch'], 'refs/heads/dev'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))]

jobs:
  - job: FlutterAppBuild
    timeoutInMinutes: 210
    pool:
      vmImage: macos-12

    steps:
    #   - task: NodeTool@0
    #     displayName: 'install node'
    #     inputs:
    #       versionSpec: '16.14.2'
      
      - script: |
          brew install --cask flutter
        displayName: 'install flutter'

      - task: UseRubyVersion@0
        displayName: 'Set Ruby version'
        inputs:
          versionSpec: '2.7.x'

      - script: 'bundle install'
        displayName: 'install ruby dependencies'

      - task: JavaToolInstaller@0
        displayName: 'Set Java Version'
        inputs:
          versionSpec: '11'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - script: |
          (cd android && bundle exec fastlane android build)
          cp build/app/outputs/flutter-apk/app-release.apk "flutter-$(Build.BuildNumber).apk"
        displayName: 'build android'
        env:
          CI: true  
      
      - task: XplatGenerateReleaseNotes@3
        displayName: Generate release notes
        inputs:
          outputfile: '$(Build.ArtifactStagingDirectory)/releasenotes.md'
          outputVariableName: OutputText
          templateLocation: InLine
          inlinetemplate: |
              # Notes for build 
              **Build Number**: {{buildDetails.id}}
              **Build Trigger PR Number**: {{lookup buildDetails.triggerInfo 'pr.number'}} 

              # Associated Pull Requests ({{pullRequests.length}})
              {{#forEach pullRequests}}
              {{#if isFirst}}### Associated Pull Requests (only shown if  PR) {{/if}}
              *  **PR {{this.id}}**  {{this.title}}
              {{/forEach}}

              # Builds with associated WI/CS ({{builds.length}})
              {{#forEach builds}}
              {{#if isFirst}}## Builds {{/if}}
              ##  Build {{this.build.buildNumber}}
              {{#forEach this.commits}}
              {{#if isFirst}}### Commits {{/if}}
              - CS {{this.id}}
              {{/forEach}}
              {{#forEach this.workitems}}
              {{#if isFirst}}### Workitems {{/if}}
              - WI {{this.id}}
              {{/forEach}} 
              {{/forEach}}

              # Global list of WI ({{workItems.length}})
              {{#forEach workItems}}
              {{#if isFirst}}## Associated Work Items (only shown if  WI) {{/if}}
              *  **{{this.id}}**  {{lookup this.fields 'System.Title'}}
                - **WIT** {{lookup this.fields 'System.WorkItemType'}} 
                - **Tags** {{lookup this.fields 'System.Tags'}}
              {{/forEach}}

              {{#forEach commits}}
              {{#if isFirst}}### Associated commits{{/if}}
              * ** ID{{this.id}}** 
                -  **Message:** {{this.message}}
                -  **Commited by:** {{this.author.displayName}} 
                -  **FileCount:** {{this.changes.length}} 
              {{#forEach this.changes}}
                    -  **File path (TFVC or TfsGit):** {{this.item.path}}  
                    -  **File filename (GitHub):** {{this.filename}}  
              {{/forEach}}
              {{/forEach}}


      - task: PublishBuildArtifacts@1
        displayName: 'Publish android artifacts'
        inputs:
          PathtoPublish: 'build/app/outputs/flutter-apk'
          ArtifactName: 'android'
          publishLocation: 'Container'
   
      - task: PublishBuildArtifacts@1
        displayName: publish doc
        inputs:
          artifactName: 'OutputText'
          targetPath: '$(Build.ArtifactStagingDirectory)/releasenotes.md'